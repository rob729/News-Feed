plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.ksp)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.androidx.baselineprofile)
}

def final debugAppSuffix = ".debug"

android {
    experimentalProperties["android.experimental.art-profile-r8-rewriting"] = true
    experimentalProperties["android.experimental.r8.dex-startup-optimization"] = true
    signingConfigs {
        release {
        storeFile file('/Users/robinsingh/Keystore')
            storePassword 'q1w2e3r4t5y'
        }
    }
    compileSdk 34

    defaultConfig {
        applicationId "com.rob729.newsfeed"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "NEWS_FEED_API_KEY", NEWS_FEED_API_KEY)

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = debugAppSuffix
        }
        release {
            shrinkResources true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            initWith(release)
            signingConfig = signingConfigs.getByName("debug")
            proguardFiles("benchmark-rules.pro")
            matchingFallbacks = ['release']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain(17)
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.5"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.rob729.newsfeed'
}

baselineProfile {
    dexLayoutOptimization(true)
    baselineProfileRulesRewrite(true)
    baselineProfileOutputDir = "../../src/main/baselineProfiles"
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation platform(libs.compose.bom)
    implementation libs.compose.ui
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    testImplementation libs.junit

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    baselineProfile project(':baselineprofile')
    debugImplementation libs.androidx.compose.ui.tooling
    debugImplementation libs.androidx.compose.ui.test.manifest
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.compose.material.icons.extended
    implementation libs.androidx.compose.material3
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.constraintlayout.compose

    implementation libs.androidx.work.runtime.ktx
    implementation libs.androidx.browser
    implementation libs.androidx.profileinstaller
    implementation libs.androidx.startup.runtime
    implementation libs.androidx.datastore.preferences
    implementation libs.androidx.runtime.tracing

    implementation libs.coil
    implementation libs.coil.compose

    implementation libs.moshi.kotlin
    ksp libs.moshi.codegen

    implementation libs.orbit.viewmodel
    implementation libs.orbit.compose

    implementation libs.retrofit
    implementation libs.converter.moshi
    implementation libs.logging.interceptor

    implementation libs.kotlinx.datetime

    implementation libs.androidx.room.runtime
    ksp libs.androidx.room.compiler
    implementation libs.androidx.room.ktx

    implementation libs.koin.android
    implementation libs.koin.androidx.compose

    debugImplementation libs.pluto
    benchmarkImplementation libs.pluto.no.op
    releaseImplementation libs.pluto.no.op

    debugImplementation libs.bundle.core
    benchmarkImplementation libs.bundle.core.no.op
    releaseImplementation libs.bundle.core.no.op
}